    根据朴素贝叶斯对垃圾邮件进行分类的原理可知，我们需要一个合适的单词表（包括了所有邮件的单词）、单词表中每个单词是否在样本邮件中出现（甚至出现的次数）。
    此数据集是经处理后的数据集，保存了每个样本（即每一行）中在单词表中出现的单词的索引（此处的索引非绝对索引，而是相对于前一个单词索引的偏移值，一般地，单词表中第一个单词的索引为0）和次数。每个样本的第一个数据为{0,1}，0表示正常邮件，1表示垃圾邮件。最后一个数据为-1，表示邮件结束。
    举例来说，某样本（行）数据为1,3,1,5,2,6,1,-1，可将该数据表示为1,(3,1),(5,2),(6,1),-1，第一个数据为1表示正常邮件，后三组数据{i,j}，其中i表示本单词索引值相对于前一个单词索引值的偏移量，j表示单词出现的次数。对于本例子，即索引为3的单词出现1次，索引为3+5=8的单词痴线2次，索引为3+5+6=14的单词出现1次.
    对于我们而言，数据矩阵X，是一个m*n维矩阵（m为样本个数，n是单词表的总词数），Xij表示单词表中第j个单词在第i个样本是否出现（1代表出现，0代表未出现）。这有助于建模，因此需要对数据进行处理（readData.m）